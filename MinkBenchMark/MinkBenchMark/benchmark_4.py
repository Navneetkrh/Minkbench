
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import time
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from backend3.benchmark_composite import *


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("assets//benchmark_4")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

global d_single_mc, d_single_matrix, d_single_image, d_single_arithmetic, d_single_final, d_multi_mc, d_multi_matrix, d_multi_image, d_multi_arith, d_multi_final, d_kernel_arith1, d_kernel_arith2, d_kernel_final, d_kernel_img, d_kernel_ml,d_kernel_pdf, d_kernel_primef, d_max_freq, d_max_temp, d_avg_freq, d_avg_temp, d_bench_time

d_single_mc = '1'
d_single_matrix = '2'
d_single_image = '3'
d_single_arithmetic = '4'
d_single_final = '5'

d_multi_mc = '6'
d_multi_matrix = '7'
d_multi_image = '8'
d_multi_arith = '9'
d_multi_final = '10'

d_kernel_ml = '11'
d_kernel_arith1 = '12'
d_kernel_arith2 = '13'
d_kernel_pdf = 14
d_kernel_primef = '15'
d_kernel_img = '16'
d_kernel_final = '17'

d_max_temp = '18'
d_avg_temp = '19'

d_max_freq = '20'
d_avg_freq = '21'

d_bench_time = '22'


def benchmark_page(parent):
    canvas = Canvas(
        parent,
        bg = "#010101",
        height = 693,
        width = 937,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )
    
    def start_benchmark():
        print("Benchmarking button clicked")
        canvas.itemconfig(remark, text="Benchmarking in Progress!\nPlease ,don't try to quit \nor close the program", fill="#FF6347" )
        canvas.update()
        time.sleep(2)
        
    def get_score():
        # start_benchmark()
        # single_mc, single_matrix, single_image, single_arithmetic, single_final, multi_mc, multi_matrix, multi_image, multi_arith, multi_final, kernel_ml, kernel_arith1, kernel_arith2, kernel_pdf, kernel_primef, kernel_img, kernel_final, max_temp, avg_temp, max_freq, avg_freq, bench_time = Main_benchmark()
        # single_mc, single_matrix, single_image, single_arithmetic, single_final, multi_mc, multi_matrix, multi_image, multi_arith, multi_final, kernel_ml, kernel_arith1, kernel_arith2, kernel_pdf, kernel_primef, kernel_img, kernel_final, max_temp, avg_temp, max_freq, avg_freq, bench_time = 1,2,3,4
        b_start = time.time()
        canvas.itemconfig(max_temp, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(max_freq, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(avg_temp, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(avg_freq, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(single_mc, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(multi_mc, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_single_mc, d_multi_mc = scores_monte_carlo()
        canvas.itemconfig(single_mc, text=str(d_single_mc), fill="#AAFF00")
        canvas.itemconfig(multi_mc, text=str(d_multi_mc), fill="#AAFF00")
        canvas.update()
        
        
        
        canvas.itemconfig(single_matrix, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(multi_matrix, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_single_matrix, d_multi_matrix = scores_Mat_operation_check()
        canvas.itemconfig(single_matrix, text=str(d_single_matrix), fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(multi_matrix, text=str(d_multi_matrix), fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        
        canvas.itemconfig(single_image, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(multi_image, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_single_image, d_multi_image = scores_Check_single_multi_image()
        canvas.itemconfig(single_image, text=str(d_single_image), fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(multi_image, text=str(d_multi_image), fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        canvas.itemconfig(single_arithmetic, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(multi_arith, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_single_arithmetic, d_multi_arith = scores_Arith_check()
        canvas.itemconfig(single_arithmetic, text=str(d_single_arithmetic), fill="#AAFF00")
        canvas.itemconfig(multi_arith, text=str(d_multi_arith), fill="#AAFF00")
        canvas.update()
        
        canvas.itemconfig(single_final, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(multi_final, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_single_final = d_single_arithmetic+d_single_image+d_single_matrix+d_single_mc
        d_multi_final = d_multi_arith+d_multi_image+d_multi_matrix+d_multi_mc
        canvas.itemconfig(single_final, text=str(d_single_final),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(multi_final, text=str(d_multi_final),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        canvas.itemconfig(kernel_ml, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_kernel_ml = scores_ml()
        canvas.itemconfig(kernel_ml, text=str(d_kernel_ml),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        canvas.itemconfig(kernel_arith1, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_kernel_arith1 = scores_ar1()
        canvas.itemconfig(kernel_arith1, text=str(d_kernel_arith1),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        canvas.itemconfig(kernel_arith2, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_kernel_arith2 = scores_ar2()
        canvas.itemconfig(kernel_arith2, text=str(d_kernel_arith2),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        # canvas.itemconfig(kernel_pdf, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        # canvas.update()
        # d_kernel_pdf = score_pdf()
        # canvas.itemconfig(kernel_pdf, text=str(d_kernel_pdf),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        # canvas.update()
        
        canvas.itemconfig(kernel_primef, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_kernel_primef = score_prime()
        canvas.itemconfig(kernel_primef, text=str(d_kernel_primef),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        canvas.itemconfig(kernel_img, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_kernel_img = score_img()
        canvas.itemconfig(kernel_img, text=str(d_kernel_img),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        canvas.itemconfig(kernel_final, text="Running", fill="#FFE078", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        d_kernel_final = int(d_kernel_arith1) + int(d_kernel_arith2) + int(d_kernel_img) + int(d_kernel_ml) + int(d_kernel_pdf) + int(d_kernel_primef)
        canvas.itemconfig(kernel_final, text=str(d_kernel_final),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        d_max_temp, d_max_freq, d_avg_freq, d_avg_temp = extra_info()
        canvas.itemconfig(max_temp, text=str(d_max_temp),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(avg_temp, text=str(d_avg_temp),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(max_freq, text=str(d_max_freq),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.itemconfig(avg_freq, text=str(d_avg_freq),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        b_end = time.time()
        
        d_bench_time = b_end - b_start
        canvas.itemconfig(bench_time, text=str(d_bench_time),fill="#AAFF00", font=("MontserratRoman Bold", 18 * -1))
        canvas.update()
        
        # time.sleep(5)
        # string_result = f"Benchmarking completed!\n\nYour MinkBench Score: {round(b_score,2)}"
        # string_result_details=f"\n\nMachine Learning Score: {round(ml_score,2)}\nArithmetic Score: {round(ar_score,2)}\nTree Score: {round(dt_score,2)}"
        # canvas.itemconfig(result, text=string_result, fill="#AAFF00")
        # canvas.itemconfig(result_detail, text=string_result_details, fill="#DFBAC7")
        # print(b_score, ml_score, ar_score, dt_score)   
        
    def done_benchmark():
        canvas.itemconfig(remark, text="Benchmarking \ncompleted", fill="#AAFF00")

    canvas.place(x = 300, y = 14)
    canvas.create_text(
        338.0,
        16.0,
        anchor="nw",
        text="Benchmark",
        fill="#DFBAC7",
        font=("MontserratRoman Bold", 24 * -1)
    )

    global image_image_1, image_image_2, image_image_3, image_image_4, image_image_5, image_image_6, image_image_7, image_image_8, image_image_9, image_image_10, image_1, image_2, image_3, image_4, image_5, image_6, image_7, image_8, image_9, image_10, button_image_1, button_1
    image_image_1 = PhotoImage(
        file=relative_to_assets("image_1.png"))
    image_1 = canvas.create_image(
        469.0,
        103.0,
        image=image_image_1
    )

    image_image_2 = PhotoImage(
        file=relative_to_assets("image_2.png"))
    image_2 = canvas.create_image(
        154.0,
        104.0,
        image=image_image_2
    )

    remark = canvas.create_text(
        300.0,
        70.0,
        anchor="nw",
        text="Click 🐰 to \nStart the Benchmark ",
        fill="#99999B",
        font=("MontserratRoman Medium", 16 * -1)
    )

    button_image_1 = PhotoImage(
        file=relative_to_assets("button_11.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: [f() for f in [start_benchmark, get_score, done_benchmark]],
        relief="flat"
    )
    button_1.place(
        x=870.0,
        y=80.0,
        width=73.0,
        height=73.0
    )

    image_image_3 = PhotoImage(
        file=relative_to_assets("image_3.png"))
    image_3 = canvas.create_image(
        319.0,
        361.0,
        image=image_image_3
    )

    image_image_4 = PhotoImage(
        file=relative_to_assets("image_4.png"))
    image_4 = canvas.create_image(
        168.0,
        391.0,
        image=image_image_4
    )

    canvas.create_text(
        44.0,
        493.0,
        anchor="nw",
        text="Final",
        fill="#FFFFFF",
        font=("MontserratRoman Bold", 20 * -1)
    )

    canvas.create_text(
        44.0,
        331.0,
        anchor="nw",
        text="Monte Carlo",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    canvas.create_text(
        44.0,
        369.0,
        anchor="nw",
        text="Matrix",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    image_image_5 = PhotoImage(
        file=relative_to_assets("image_5.png"))
    image_5 = canvas.create_image(
        70.0,
        417.0,
        image=image_image_5
    )

    image_image_6 = PhotoImage(
        file=relative_to_assets("image_6.png"))
    image_6 = canvas.create_image(
        472.0,
        391.0,
        image=image_image_6
    )

    image_image_7 = PhotoImage(
        file=relative_to_assets("image_7.png"))
    image_7 = canvas.create_image(
        784.0,
        361.0,
        image=image_image_7
    )

    image_image_8 = PhotoImage(
        file=relative_to_assets("image_8.png"))
    image_8 = canvas.create_image(
        238.0,
        639.0,
        image=image_image_8
    )

    image_image_9 = PhotoImage(
        file=relative_to_assets("image_9.png"))
    image_9 = canvas.create_image(
        699.0,
        639.0,
        image=image_image_9
    )

    canvas.create_text(
        659.0,
        493.0,
        anchor="nw",
        text="Final",
        fill="#FFFFFF",
        font=("MontserratRoman Bold", 20 * -1)
    )

    canvas.create_text(
        656.0,
        255.0,
        anchor="nw",
        text="ML Train",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    canvas.create_text(
        656.0,
        293.0,
        anchor="nw",
        text="Arithmetic1",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    canvas.create_text(
        656.0,
        331.0,
        anchor="nw",
        text="Arithmetic2",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    canvas.create_text(
        655.0,
        369.0,
        anchor="nw",
        text="PDF Rendering",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    kernel_ml = canvas.create_text(
        824.0,
        254.0,
        anchor="nw",
        text="Score_ML",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    kernel_arith1 = canvas.create_text(
        822.0,
        292.0,
        anchor="nw",
        text="Score_A1",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    kernel_arith2 = canvas.create_text(
        822.0,
        331.0,
        anchor="nw",
        text="Score_A2",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    kernel_pdf = canvas.create_text(
        822.0,
        369.0,
        anchor="nw",
        text="Score_PDF",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    canvas.create_text(
        656.0,
        407.0,
        anchor="nw",
        text="Prime Factoring",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    kernel_primef = canvas.create_text(
        822.0,
        407.0,
        anchor="nw",
        text="Score_PF",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    canvas.create_text(
        659.0,
        445.0,
        anchor="nw",
        text="IMG Processing",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    kernel_img = canvas.create_text(
        822.0,
        445.0,
        anchor="nw",
        text="Score_IMG",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    kernel_final = canvas.create_text(
        824.0,
        495.0,
        anchor="nw",
        text="Score_F",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    canvas.create_text(
        30.0,
        265.0,
        anchor="nw",
        text="Single Core Scores",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 24 * -1)
    )

    canvas.create_text(
        345.0,
        264.0,
        anchor="nw",
        text="Multi Core Scores",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 24 * -1)
    )

    canvas.create_text(
        699.0,
        189.0,
        anchor="nw",
        text="Kernel Scores",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 24 * -1)
    )

    canvas.create_text(
        44.0,
        445.0,
        anchor="nw",
        text="Arithmetic",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    single_mc = canvas.create_text(
        202.0,
        331.0,
        anchor="nw",
        text="Score_MC",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    canvas.create_text(
        32.0,
        628.0,
        anchor="nw",
        text="MAX",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    max_temp = canvas.create_text(
        112.0,
        628.0,
        anchor="nw",
        text="Max_Temp",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    canvas.create_text(
        270.0,
        628.0,
        anchor="nw",
        text="AVG",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    avg_temp = canvas.create_text(
        353.0,
        628.0,
        anchor="nw",
        text="Avg_Temp",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    canvas.create_text(
        496.0,
        628.0,
        anchor="nw",
        text="MAX",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    max_freq = canvas.create_text(
        580.0,
        628.0,
        anchor="nw",
        text="Max_Freq",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    canvas.create_text(
        734.0,
        628.0,
        anchor="nw",
        text="AVG",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    avg_freq = canvas.create_text(
        821.0,
        628.0,
        anchor="nw",
        text="Avg_Freq",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    single_matrix = canvas.create_text(
        202.0,
        369.0,
        anchor="nw",
        text="Score_M",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    single_image = canvas.create_text(
        202.0,
        407.0,
        anchor="nw",
        text="Score_2",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    single_arithmetic = canvas.create_text(
        202.0,
        445.0,
        anchor="nw",
        text="Score_A",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    single_final = canvas.create_text(
        202.0,
        495.0,
        anchor="nw",
        text="Score_F",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    canvas.create_text(
        359.0,
        492.0,
        anchor="nw",
        text="Final",
        fill="#FFFFFF",
        font=("MontserratRoman Bold", 20 * -1)
    )

    canvas.create_text(
        359.0,
        330.0,
        anchor="nw",
        text="Monte Carlo",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    canvas.create_text(
        359.0,
        368.0,
        anchor="nw",
        text="Matrix",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    image_image_10 = PhotoImage(
        file=relative_to_assets("image_10.png"))
    image_10 = canvas.create_image(
        385.0,
        416.0,
        image=image_image_10
    )

    canvas.create_text(
        359.0,
        444.0,
        anchor="nw",
        text="Arithmetic",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

    multi_mc = canvas.create_text(
        517.0,
        330.0,
        anchor="nw",
        text="Score_MC",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    multi_matrix = canvas.create_text(
        517.0,
        368.0,
        anchor="nw",
        text="Score_M",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    multi_image = canvas.create_text(
        517.0,
        406.0,
        anchor="nw",
        text="Score_I",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    multi_arith = canvas.create_text(
        517.0,
        444.0,
        anchor="nw",
        text="Score_A",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    multi_final = canvas.create_text(
        517.0,
        494.0,
        anchor="nw",
        text="Score_1",
        fill="#FFFFFF",
        font=("MontserratRoman Regular", 16 * -1)
    )

    canvas.create_text(
        139.0,
        189.0,
        anchor="nw",
        text="Micro Benchmarking Scores",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 24 * -1)
    )

    canvas.create_text(
        152.0,
        565.0,
        anchor="nw",
        text="Temperatures",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 24 * -1)
    )

    canvas.create_text(
        632.0,
        565.0,
        anchor="nw",
        text="Frequency",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 24 * -1)
    )

    bench_time = canvas.create_text(
        741.0,
        95.0,
        anchor="nw",
        text="Ran In 420s",
        fill="#FFFFFF",
        font=("MontserratRoman SemiBold", 16 * -1)
    )

